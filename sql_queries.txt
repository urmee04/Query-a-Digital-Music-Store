
/*Query 1-Query used for first Insight:Top Artists By Number Of Songs.*/

SELECT
  Artist.Name AS PopularArtist,
  COUNT(Track.TrackId) AS SongNumbers
FROM Artist
JOIN Album
  ON Album.ArtistId = Artist.ArtistId
JOIN Track
  ON Album.AlbumId = Track.AlbumId
GROUP BY Artist.Name
ORDER BY 2 DESC
LIMIT 10;

/*Query 2-Query used for Second Insight:Popular Genre Types.*/

SELECT
  Genre.Name,
  COUNT(Genre.Name) AS PopularGenre
FROM InvoiceLine
JOIN Track
  ON InvoiceLine.TrackId = Track.TrackId
JOIN Genre
  ON Track.GenreId = Genre.GenreId
GROUP BY Genre.Name
ORDER BY PopularGenre DESC
LIMIT 10;

/*Query 3-Query used for Third Insight:Most Expensive Artist Based On Cost Of Songs.*/

SELECT
  Artist.Name AS ArtistName,
  SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS SongCost
FROM InvoiceLine
JOIN Track
  ON Track.TrackId = InvoiceLine.TrackId
JOIN Album
  ON Album.AlbumId = Track.AlbumId
JOIN Artist
  ON Artist.ArtistId = Album.ArtistId
GROUP BY Artist.Name
ORDER BY SongCost DESC
LIMIT 10;

/*Query 4-Query used for Forth Insight:Amount Spent By Customers For Iron Maiden.*/

SELECT
  Customer.FirstName,
  SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS SongCost
FROM Invoice
JOIN InvoiceLine
  ON Invoice.invoiceId = InvoiceLine.InvoiceId
JOIN Customer
  ON Invoice.CustomerId = Customer.CustomerId
JOIN Track
  ON Track.TrackId = InvoiceLine.TrackId
JOIN Album
  ON Album.AlbumId = Track.AlbumId
JOIN Artist
  ON Artist.ArtistId = Album.ArtistId
WHERE Artist.Name = 'Iron Maiden'
GROUP BY Customer.CustomerId
ORDER BY SongCost DESC
LIMIT 10;